{"version":3,"sources":["../src/DocumentHighlight.js"],"names":["DocumentHighlightSupport","constructor","documents","flow","provideDocumentHighlight","params","position","textDocument","fileName","uri","doc","get","highlights","highlight","buffer","map","range","start","end"],"mappings":";;;;;;;;;;AAYA;;AAEA;;;;AACA;;;;AAWe,MAAMA,wBAAN,CAA+B;;AAI5CC,cAAY,EAACC,SAAD,EAAYC,IAAZ,EAAZ,EAA+D;AAC7D,SAAKD,SAAL,GAAiBA,SAAjB;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACD;;AAEKC,0BAAN,CACEC,MADF,EAEmC;AAAA;;AAAA;AAAA,YAC1BC,QAD0B,GACAD,MADA,CAC1BC,QAD0B;AAAA,YAChBC,YADgB,GACAF,MADA,CAChBE,YADgB;;;AAGjC,YAAMC,WAAW,yBAAcD,aAAaE,GAA3B,CAAjB;AACA,YAAMC,MAAM,MAAKR,SAAL,CAAeS,GAAf,CAAmBJ,aAAaE,GAAhC,CAAZ;;AAEA,YAAMG,aAAa,MAAM,MAAKT,IAAL,CAAUU,SAAV,CACvBL,QADuB,EAEvBE,IAAII,MAFmB,EAGvB,kCAAuBR,QAAvB,CAHuB,CAAzB;AAKA,UAAIM,UAAJ,EAAgB;AACd,eAAOA,WAAWG,GAAX,CAAe,qBAAa;AACjC,iBAAO;AACLC,mBAAO;AACLC,qBAAO,kCAAuBJ,UAAUI,KAAjC,CADF;AAELC,mBAAK,kCAAuBL,UAAUK,GAAjC;AAFA;AADF,WAAP;AAMD,SAPM,CAAP;AAQD;AACD,aAAO,IAAP;AArBiC;AAsBlC;AAjC2C;kBAAzBlB,wB,EA1BrB","file":"DocumentHighlight.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n * @format\n */\n\nimport {FlowSingleProjectLanguageService} from './pkg/nuclide-flow-rpc/lib/FlowSingleProjectLanguageService';\n\nimport TextDocuments from './TextDocuments';\nimport {\n  atomPointToLSPPosition,\n  lspPositionToAtomPoint,\n  fileURIToPath,\n} from './utils/util';\n\ntype DocumentHighlightSupportParams = {\n  documents: TextDocuments,\n  flow: FlowSingleProjectLanguageService,\n};\n\nexport default class DocumentHighlightSupport {\n  documents: TextDocuments;\n  flow: FlowSingleProjectLanguageService;\n\n  constructor({documents, flow}: DocumentHighlightSupportParams) {\n    this.documents = documents;\n    this.flow = flow;\n  }\n\n  async provideDocumentHighlight(\n    params: TextDocumentPositionParams,\n  ): Promise<?(DocumentHighlight[])> {\n    const {position, textDocument} = params;\n\n    const fileName = fileURIToPath(textDocument.uri);\n    const doc = this.documents.get(textDocument.uri);\n\n    const highlights = await this.flow.highlight(\n      fileName,\n      doc.buffer,\n      lspPositionToAtomPoint(position),\n    );\n    if (highlights) {\n      return highlights.map(highlight => {\n        return {\n          range: {\n            start: atomPointToLSPPosition(highlight.start),\n            end: atomPointToLSPPosition(highlight.end),\n          },\n        };\n      });\n    }\n    return null;\n  }\n}\n"]}