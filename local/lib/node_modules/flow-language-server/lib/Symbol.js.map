{"version":3,"sources":["../src/Symbol.js"],"names":["logger","SymbolSupport","constructor","documents","flow","provideDocumentSymbol","params","debug","textDocument","fileName","uri","doc","get","outline","getOutline","buffer","treesToItems","outlineTrees","trees","containerName","items","tree","representativeName","children","length","name","kind","item","OUTLINE_KIND_TO_LSP_KIND","location","range","start","startPosition","end","endPosition","push","array","Array","boolean","Boolean","class","Class","constant","Constant","Constructor","enum","Enum","field","Field","file","File","function","Function","interface","Interface","method","Method","module","Module","namespace","Namespace","number","Number","package","Package","property","Property","string","String","variable","Variable"],"mappings":";;;;;;;;;;AAeA;;;;AACA;;AAEA;;AACA;;;;AACA;;AACA;;;;AArBA;;;;;;;;;;;;AAuBA,MAAMA,SAAS,uBAAU,QAAV,CAAf;;AAOe,MAAMC,aAAN,CAAoB;;AAIjCC,cAAY,EAACC,SAAD,EAAYC,IAAZ,EAAZ,EAAoD;AAClD,SAAKD,SAAL,GAAiBA,SAAjB;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACD;;AAEKC,uBAAN,CACEC,MADF,EAEsC;AAAA;;AAAA;AACpCN,aAAOO,KAAP,CAAa,4BAAb;AADoC,YAE7BC,YAF6B,GAEbF,MAFa,CAE7BE,YAF6B;;;AAIpC,YAAMC,WAAW,yBAAcD,aAAaE,GAA3B,CAAjB;AACA,YAAMC,MAAM,MAAKR,SAAL,CAAeS,GAAf,CAAmBJ,aAAaE,GAAhC,CAAZ;;AAEA,YAAMG,UAAU,MAAM,MAAKT,IAAL,CAAUU,UAAV,CAAqBL,QAArB,EAA+BE,IAAII,MAAnC,CAAtB;;AAEA,UAAI,CAACF,OAAL,EAAc;AACZb,eAAOO,KAAP,CAAa,iCAAb;AACA,eAAO,EAAP;AACD;;AAED,aAAOS,aAAaH,QAAQI,YAArB,EAAmC,IAAnC,EAAyCN,IAAID,GAA7C,CAAP;AAdoC;AAerC;AA1BgC;;kBAAdT,a;AA6BrB,SAASe,YAAT,CACEE,KADF,EAEEC,aAFF,EAGET,GAHF,EAI6B;AAC3B,QAAMU,QAAQ,EAAd;AAD2B;AAAA;AAAA;;AAAA;AAE3B,yBAAmBF,KAAnB,8HAA0B;AAAA,YAAfG,IAAe;;AACxB,UAAI,CAACA,KAAKC,kBAAN,IAA4B,CAACD,KAAKE,QAAL,CAAcC,MAA/C,EAAuD;AACrD;AACD;;AAED,YAAMC,OAAOJ,KAAKC,kBAAlB;AACA,YAAMI,OAAOL,KAAKK,IAAlB;AACA,UAAID,QAAQ,IAAR,IAAgBC,QAAQ,IAA5B,EAAkC;AAChC;AACD;;AAED,YAAMC,OAA2B;AAC/BF,YAD+B;AAE/BC,cAAME,yBAAyBF,IAAzB,CAFyB;AAG/BG,kBAAU;AACRnB,aADQ;AAERoB,iBAAO;AACLC,mBAAO,kCAAuBV,KAAKW,aAA5B,CADF;AAELC,iBAAK,kCAAuB,0BAAWZ,KAAKa,WAAhB,CAAvB;AAFA;AAFC;AAHqB,OAAjC;;AAYA,UAAIf,iBAAiB,IAArB,EAA2B;AACzBQ,aAAKR,aAAL,GAAqBA,aAArB;AACD;;AAEDC,YAAMe,IAAN,CAAWR,IAAX,EAAiB,GAAGX,aAAaK,KAAKE,QAAlB,EAA4BE,IAA5B,EAAkCf,GAAlC,CAApB;AACD;AA9B0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgC3B,SAAOU,KAAP;AACD;;AAED,MAAMQ,2BAA2B;AAC/BQ,SAAO,sCAAWC,KADa;AAE/BC,WAAS,sCAAWC,OAFW;AAG/BC,SAAO,sCAAWC,KAHa;AAI/BC,YAAU,sCAAWC,QAJU;AAK/BzC,eAAa,sCAAW0C,WALO;AAM/BC,QAAM,sCAAWC,IANc;AAO/BC,SAAO,sCAAWC,KAPa;AAQ/BC,QAAM,sCAAWC,IARc;AAS/BC,YAAU,sCAAWC,QATU;AAU/BC,aAAW,sCAAWC,SAVS;AAW/BC,UAAQ,sCAAWC,MAXY;AAY/BC,UAAQ,sCAAWC,MAZY;AAa/BC,aAAW,sCAAWC,SAbS;AAc/BC,UAAQ,sCAAWC,MAdY;AAe/BC,WAAS,sCAAWC,OAfW;AAgB/BC,YAAU,sCAAWC,QAhBU;AAiB/BC,UAAQ,sCAAWC,MAjBY;AAkB/BC,YAAU,sCAAWC;AAlBU,CAAjC","file":"Symbol.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n * @format\n */\n\nimport type {DocumentSymbolParams} from 'vscode-languageserver-types';\nimport type {OutlineTree} from 'atom-ide-ui';\n\nimport nullthrows from 'nullthrows';\nimport {SymbolKind, ISymbolInformation} from 'vscode-languageserver-types';\n\nimport {FlowSingleProjectLanguageService} from './pkg/nuclide-flow-rpc/lib/FlowSingleProjectLanguageService';\nimport TextDocuments from './TextDocuments';\nimport {atomPointToLSPPosition, fileURIToPath} from './utils/util';\nimport {getLogger} from 'log4js';\n\nconst logger = getLogger('Symbol');\n\ntype SymbolSupportParams = {\n  documents: TextDocuments,\n  flow: FlowSingleProjectLanguageService,\n};\n\nexport default class SymbolSupport {\n  documents: TextDocuments;\n  flow: FlowSingleProjectLanguageService;\n\n  constructor({documents, flow}: SymbolSupportParams) {\n    this.documents = documents;\n    this.flow = flow;\n  }\n\n  async provideDocumentSymbol(\n    params: DocumentSymbolParams,\n  ): Promise<Array<ISymbolInformation>> {\n    logger.debug('document symbols requested');\n    const {textDocument} = params;\n\n    const fileName = fileURIToPath(textDocument.uri);\n    const doc = this.documents.get(textDocument.uri);\n\n    const outline = await this.flow.getOutline(fileName, doc.buffer);\n\n    if (!outline) {\n      logger.debug('returning empty list of symbols');\n      return [];\n    }\n\n    return treesToItems(outline.outlineTrees, null, doc.uri);\n  }\n}\n\nfunction treesToItems(\n  trees: Array<OutlineTree>,\n  containerName: ?string,\n  uri: string,\n): Array<ISymbolInformation> {\n  const items = [];\n  for (const tree of trees) {\n    if (!tree.representativeName && !tree.children.length) {\n      continue;\n    }\n\n    const name = tree.representativeName;\n    const kind = tree.kind;\n    if (name == null || kind == null) {\n      continue;\n    }\n\n    const item: ISymbolInformation = {\n      name,\n      kind: OUTLINE_KIND_TO_LSP_KIND[kind],\n      location: {\n        uri,\n        range: {\n          start: atomPointToLSPPosition(tree.startPosition),\n          end: atomPointToLSPPosition(nullthrows(tree.endPosition)),\n        },\n      },\n    };\n\n    if (containerName != null) {\n      item.containerName = containerName;\n    }\n\n    items.push(item, ...treesToItems(tree.children, name, uri));\n  }\n\n  return items;\n}\n\nconst OUTLINE_KIND_TO_LSP_KIND = {\n  array: SymbolKind.Array,\n  boolean: SymbolKind.Boolean,\n  class: SymbolKind.Class,\n  constant: SymbolKind.Constant,\n  constructor: SymbolKind.Constructor,\n  enum: SymbolKind.Enum,\n  field: SymbolKind.Field,\n  file: SymbolKind.File,\n  function: SymbolKind.Function,\n  interface: SymbolKind.Interface,\n  method: SymbolKind.Method,\n  module: SymbolKind.Module,\n  namespace: SymbolKind.Namespace,\n  number: SymbolKind.Number,\n  package: SymbolKind.Package,\n  property: SymbolKind.Property,\n  string: SymbolKind.String,\n  variable: SymbolKind.Variable,\n};\n"]}