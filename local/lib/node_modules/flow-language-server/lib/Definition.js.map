{"version":3,"sources":["../src/Definition.js"],"names":["logger","DefinitionSupport","constructor","documents","flow","provideDefinition","textDocument","position","fileName","uri","doc","get","definitionResults","getDefinition","buffer","definitions","map","lspPosition","def","range","start","end","path","debug"],"mappings":";;;;;;;;;;AAeA;;AAEA;;AACA;;;;AAlBA;;;;;;;;;;;;AAyBA,MAAMA,SAAS,uBAAU,YAAV,CAAf;;AAOe,MAAMC,iBAAN,CAAwB;;AAIrCC,cAAY,EAACC,SAAD,EAAYC,IAAZ,EAAZ,EAAwD;AACtD,SAAKD,SAAL,GAAiBA,SAAjB;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACD;;AAEKC,mBAAN,CAAwB;AACtBC,gBADsB;AAEtBC;AAFsB,GAAxB,EAGqD;AAAA;;AAAA;AACnD,YAAMC,WAAW,yBAAcF,aAAaG,GAA3B,CAAjB;AACA,YAAMC,MAAM,MAAKP,SAAL,CAAeQ,GAAf,CAAmBL,aAAaG,GAAhC,CAAZ;;AAEA,YAAMG,oBAAoB,MAAM,MAAKR,IAAL,CAAUS,aAAV,CAC9BL,QAD8B,EAE9BE,IAAII,MAF0B,EAG9B,kCAAuBP,QAAvB,CAH8B,CAAhC;;AAMA,UAAIK,iBAAJ,EAAuB;AACrB,eAAOA,kBAAkBG,WAAlB,CAA8BC,GAA9B,CAAkC,eAAO;AAC9C,gBAAMC,cAAc,kCAAuBC,IAAIX,QAA3B,CAApB;;AAEA,gBAAMY,QAAgB;AACpBC,mBAAOH,WADa;AAEpBI,iBAAKJ;AAFe,WAAtB;;AAKA,iBAAO;AACLR,iBAAK,yBAAcS,IAAII,IAAlB,CADA;AAELH;AAFK,WAAP;AAID,SAZM,CAAP;AAaD;;AAEDnB,aAAOuB,KAAP,CAAa,yBAAb;AACA,aAAO,IAAP,CA3BmD,CA2BtC;AA3BsC;AA4BpD;AAxCoC;kBAAlBtB,iB","file":"Definition.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n * @format\n */\n\nimport type {Definition, IRange} from 'vscode-languageserver-types';\nimport type {TextDocumentPositionParams} from 'vscode-languageserver/lib/protocol';\nimport type TextDocuments from './TextDocuments';\nimport {FlowSingleProjectLanguageService} from './pkg/nuclide-flow-rpc/lib/FlowSingleProjectLanguageService';\n\nimport {getLogger} from 'log4js';\nimport {\n  atomPointToLSPPosition,\n  lspPositionToAtomPoint,\n  fileURIToPath,\n  filePathToURI,\n} from './utils/util';\n\nconst logger = getLogger('Definition');\n\ntype DefinitionSupportParams = {\n  documents: TextDocuments,\n  flow: FlowSingleProjectLanguageService,\n};\n\nexport default class DefinitionSupport {\n  documents: TextDocuments;\n  flow: FlowSingleProjectLanguageService;\n\n  constructor({documents, flow}: DefinitionSupportParams) {\n    this.documents = documents;\n    this.flow = flow;\n  }\n\n  async provideDefinition({\n    textDocument,\n    position,\n  }: TextDocumentPositionParams): Promise<?Definition> {\n    const fileName = fileURIToPath(textDocument.uri);\n    const doc = this.documents.get(textDocument.uri);\n\n    const definitionResults = await this.flow.getDefinition(\n      fileName,\n      doc.buffer,\n      lspPositionToAtomPoint(position),\n    );\n\n    if (definitionResults) {\n      return definitionResults.definitions.map(def => {\n        const lspPosition = atomPointToLSPPosition(def.position);\n\n        const range: IRange = {\n          start: lspPosition,\n          end: lspPosition,\n        };\n\n        return {\n          uri: filePathToURI(def.path),\n          range,\n        };\n      });\n    }\n\n    logger.debug('did not find definition');\n    return null; // no definition\n  }\n}\n"]}